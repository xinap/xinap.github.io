{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Posts","text":""},{"location":"posts_how-to-insert-extra-tags-into-head-block-in-basehtml-mkdocs/","title":"How To insert extra tags into head block in base.html (mkdocs)","text":"<p>Summary</p> <p>This is a short post to describe how to insert extra tags in to <code>&lt;head&gt;</code>  block in your doc or blog site built by mkdocs. </p> <p>At the end you will see how I added adsense to my mkdocs site.</p> <p>This post is going to follow the recommanded approach. For more detail see  Overriding blocks.</p>","tags":["mkdocs","monetisation"]},{"location":"posts_how-to-insert-extra-tags-into-head-block-in-basehtml-mkdocs/#create-overrides-dir-and-mainhtml-file","title":"Create overrides dir and main.html file","text":"<p>If this is not created, please create overrides dir.  Then create main.html under it. <pre><code>mkdir overrides\ntouch overrides/main.html\n</code></pre></p> <p>Note</p> <p>This need to be created directly under your project dir. <pre><code>.\n|-- docs\n|   |-- index.md\n|   |-- posts\n|   |   `-- ...\n|-- mkdocs.yml\n|-- overrides\n|   `-- main.html\n`-- requirements.txt\n</code></pre></p>","tags":["mkdocs","monetisation"]},{"location":"posts_how-to-insert-extra-tags-into-head-block-in-basehtml-mkdocs/#adding-overrides-to-mkdocsyml","title":"Adding Overrides to mkdocs.yml","text":"<p>If this is not done, add below under theme to mkdocs.yml file in your project <pre><code>custom_dir: overrides\n</code></pre></p> <p>Example</p> <p>Below is how my mkdocs.yml looks like: <pre><code>site_name: Nap Tech\nsite_url: https://xinap.github.io\ntheme:\n    name: material\n    custom_dir: overrides\n</code></pre></p>","tags":["mkdocs","monetisation"]},{"location":"posts_how-to-insert-extra-tags-into-head-block-in-basehtml-mkdocs/#adding-content-to-mainhtml","title":"Adding content to main.html","text":"<p>Add below to html to insert additional tags into <code>&lt;head&gt;</code></p> <pre><code>{% extends \"base.html\" %}\n\n{% block extrahead %}\n  &lt;script&gt;...&lt;/script&gt;\n{% endblock %}\n</code></pre> <p>Example</p> <p>Replace <code>&lt;script&gt;...&lt;/script&gt;</code> with your code. Below is an example of of you can add adsense to your mkdocs site. <pre><code>{% extends \"base.html\" %}\n\n{% block extrahead %}\n  &lt;script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-xxxxxxxxxxxxxxxx\"\n    crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n{% endblock %}\n</code></pre></p>","tags":["mkdocs","monetisation"]},{"location":"posts_how-to-insert-extra-tags-into-head-block-in-basehtml-mkdocs/#reference","title":"Reference","text":"<p>Original Solution Official Doc Code that the solution replaces</p> <p> Share on  Share on </p>","tags":["mkdocs","monetisation"]},{"location":"posts_how-to-set-up-miniconda-on-linux-server/","title":"How to set up Miniconda on linux server","text":"<p>Summary</p> <p>A short How-to post to document how to set up Miniconda on linux server.</p>","tags":["python","linux"]},{"location":"posts_how-to-set-up-miniconda-on-linux-server/#run-below-line-to-download-miniconda","title":"Run below line to download Miniconda","text":"<pre><code>wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n</code></pre> <p>Warning</p> <p>Above line downloads file into in current dir, do change dire if you do not  want the file to be downloaded into current dir.</p>","tags":["python","linux"]},{"location":"posts_how-to-set-up-miniconda-on-linux-server/#installation","title":"Installation","text":"<pre><code>bash Miniconda3-latest-Linux-x86_64.sh\n</code></pre> <p>Note</p> <p>After installing Miniconda, you need to restart current shell or simply  run <code>source .bashrc</code></p>","tags":["python","linux"]},{"location":"posts_how-to-set-up-miniconda-on-linux-server/#conda-env-set-up","title":"Conda env set up","text":"<p>To create conda env run below code <pre><code>conda create -n {name} python={version}\n</code></pre></p> <p>Note</p> <p>Variables in above command</p> <p>Env Name</p> <p>Replace {name} with the name you want the environment to be. </p> <p>Python version</p> <p>Replace {version} with the python version you need, e.g. 3.12. </p> <p> Share on  Share on </p>","tags":["python","linux"]},{"location":"posts_plot-stacked-bar-chart/","title":"Plot stacked bar chart","text":"","tags":["python"]},{"location":"posts_plot-stacked-bar-chart/#how-to-plot-stacked-bar-chart-with-labels-on-each-fraction-in-python","title":"How to plot stacked bar chart with labels on each fraction in python","text":"<p>Summary</p> <p>This post shows the very basic steps to plot stacked bar chart using python  with an example on a simplified imaginary dataset.</p> <p>info</p> <p>Feel free to jump to implementation if all you need is the code. You can also skip the explanation and dive directly into the code: Github link</p>","tags":["python"]},{"location":"posts_plot-stacked-bar-chart/#what-is-a-stacked-bar-chart","title":"What is a Stacked Bar Chart?","text":"<p>A Stacked Bar Chart consists of bars representing different categories,  where each bar is divided into segments representing subcategories.  The height of the bar represents the total value of the categories,  while the height of each segment represents the proportion of  each subcategory within the total.</p>","tags":["python"]},{"location":"posts_plot-stacked-bar-chart/#data","title":"Data","text":"","tags":["python"]},{"location":"posts_plot-stacked-bar-chart/#raw-data","title":"Raw data","text":"<p>We use a simple data set of a hypothetical portfolio that contains 30 stocks  from IT, Energy and Finance sectors. Assume we are trying to understand what  proportion of positive-return stocks are in our portfolio for each given date  also we want to see what sectors they are coming from.</p> <p>Our raw data looks like below</p> <pre><code>+-----+------------+---------+----------+--------------+\n|     | date       | stock   | sector   |       return |\n|-----+------------+---------+----------+--------------|\n|   0 | 2024/04/01 | VTK     | IT       |  0.0882026   |\n|   1 | 2024/04/01 | GNK     | Energy   |  0.0200079   |\n|   2 | 2024/04/01 | UHM     | Energy   |  0.0489369   |\n|   3 | 2024/04/01 | PXN     | Energy   |  0.112045    |\n|   4 | 2024/04/01 | HTQ     | IT       |  0.0933779   |\n|   5 | 2024/04/01 | GXZ     | IT       | -0.0488639   |\n...\n| 147 | 2024/04/05 | YOK     | Finance  |  0.0558508   |\n| 148 | 2024/04/05 | SHV     | Energy   | -0.0657954   |\n| 149 | 2024/04/05 | WXP     | Energy   | -0.0230792   |\n+-----+------------+---------+----------+--------------+\n</code></pre>","tags":["python"]},{"location":"posts_plot-stacked-bar-chart/#reshaped-data","title":"Reshaped data","text":"<p>To plot, we calculate the positive ratio and reshape the data into the below  form: (This is the reshaped table in our demo code).  <pre><code>+------------+-----------+-----------+----------+\n| date       |    Energy |   Finance |       IT |\n|------------+-----------+-----------+----------|\n| 2024/04/01 | 0.233333  |  0.133333 | 0.333333 |\n| 2024/04/02 | 0.0666667 |  0.1      | 0.2      |\n| 2024/04/03 | 0.133333  |  0.166667 | 0.166667 |\n| 2024/04/04 | 0.333333  |  0.133333 | 0.233333 |\n| 2024/04/05 | 0.2       |  0.133333 | 0.233333 |\n+------------+-----------+-----------+----------+\n</code></pre></p> <p>Reshape Code</p> <p>To reshape raw data to above data table, we run below code.  In below case, data i <pre><code>reshaped = raw.pipe(lambda x: x.assign(posRet=x['return']&gt;0))\\\n    .groupby(['date', 'sector']).agg(numPosRet=('posRet','sum'),numStocks = ('stock', 'count'))\\\n    .pipe(lambda x: x.assign(numStocks=x.groupby('date')['numStocks'].transform('sum'))) \\\n    .pipe(lambda x: x.assign(positivePct=x['numPosRet']/x['numStocks'])) \\\n    .reset_index() \\\n    .pivot(index='date', columns='sector', values='positivePct')\n</code></pre></p>","tags":["python"]},{"location":"posts_plot-stacked-bar-chart/#plot","title":"Plot","text":"<p>  Below is the code to code to generate above plot <pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.ticker as mtick\n\n\n# Code to get your raw data and reshape your data comes here\n# Code below assumes the reshaped table is already prepared\n\nfig, ax = plt.subplots()\nreshaped.plot.bar(stacked=True, \n               figsize=(20,10), \n               ax=ax, \n               color = sns.color_palette(\"Accent\", n_colors=3))\nfor c in ax.containers:\n    labels = [f'{v.get_height():.2%}' if v.get_height() &gt; 0 else '' for v in c]\n    ax.bar_label(c, labels=labels, label_type='center')\nax.bar_label(ax.containers[-1], \n             labels=reshaped.apply(lambda x:f'{sum(x):.2%}', axis=1))\nax.yaxis.set_major_formatter(mtick.PercentFormatter(1.0))\n</code></pre></p> <p>Break down</p> <p>Plot bar chart</p> <p>We use plot.bar function of pandas dataframe to create the bar chart.  The argument stacked is where we tell the function to plot stacked bars. <pre><code>data1.plot.bar(stacked=True, \n            figsize=(20,10), \n            ax=ax, \n            color = sns.color_palette(\"Accent\", n_colors=3))\n</code></pre></p> <p>Generate subcategory labels</p> <p>Then for each stacked area, we store its label and use ax.bar_label function to add labels to each stacked bar in our plot. <pre><code>for c in ax.containers:\n    labels = [f'{v.get_height():.2%}' if v.get_height() &gt; 0 else '' for v in c]\n    ax.bar_label(c, labels=labels, label_type='center')\n</code></pre></p> <p>Generate category labels</p> <p>We then set the label for each of the entire bars with the first line and set the y-axis label to percent format with the second line. <pre><code>ax.bar_label(ax.containers[-1], \n            labels=data1.apply(lambda x:f'{sum(x):.2%}', axis=1))\nax.yaxis.set_major_formatter(mtick.PercentFormatter(1.0))\n</code></pre></p> <p> Share on  Share on </p>","tags":["python"]},{"location":"archive/2025/","title":"2025","text":""},{"location":"category/how-to/","title":"How-To","text":""},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#linux","title":"linux","text":"<ul> <li>How to set up Miniconda on linux server</li> </ul>"},{"location":"tags/#mkdocs","title":"mkdocs","text":"<ul> <li>How To insert extra tags into head block in base.html (mkdocs)</li> </ul>"},{"location":"tags/#monetisation","title":"monetisation","text":"<ul> <li>How To insert extra tags into head block in base.html (mkdocs)</li> </ul>"},{"location":"tags/#python","title":"python","text":"<ul> <li>How to set up Miniconda on linux server</li> <li>Plot stacked bar chart</li> </ul>"}]}